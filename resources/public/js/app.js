// Generated by CoffeeScript 1.4.0
(function() {
  var parsePrefixes;

  window.app = angular.module('app', []);

  app.config([
    '$routeProvider', function($routeProvider) {
      return $routeProvider.when('/', {
        templateUrl: '/templates/index.html',
        controller: app.IndexCtrl
      }).when('/port/:port', {
        templateUrl: '/templates/store.html',
        controller: app.StoreCtrl
      }).otherwise({
        redirectTo: '/'
      });
    }
  ]);

  /* --------------------------------------------
       Begin directives.coffee
  --------------------------------------------
  */


  app.directive('sparqlValue', function($rootScope) {
    return {
      template: "<span ng-show=\"literal\">{{v}}</span>\n<a href=\"#\" ng-click=\"explore(v)\" ng-hide=\"literal\" data-uri=\"{{v}}\">{{prefixed}}</a>",
      link: function(scope, element, attrs) {
        var prefixes;
        prefixes = $rootScope.prefixes;
        return scope.$watch(attrs.sparqlValue, function(value) {
          var prefix, uri, _results;
          if (value) {
            if (value.type === "uri") {
              scope.literal = false;
              _results = [];
              for (prefix in prefixes) {
                uri = prefixes[prefix];
                if (value.value.indexOf(uri) === 0) {
                  scope.prefixed = value.value.replace(uri, prefix + ":");
                }
                _results.push(scope.v = value.value);
              }
              return _results;
            } else {
              scope.v = value.value;
              return scope.literal = true;
            }
          }
        });
      }
    };
  });

  /* --------------------------------------------
       Begin services.coffee
  --------------------------------------------
  */


  app.factory('FourstoreService', function($http) {
    var FourstoreService;
    return new (FourstoreService = (function() {

      function FourstoreService() {}

      FourstoreService.prototype.get = function(port, query, callback) {
        return $http({
          method: "GET",
          url: "/api/get",
          params: {
            query: query,
            endpoint: "http://localhost:" + port
          }
        }).success(callback);
      };

      return FourstoreService;

    })());
  });

  /* --------------------------------------------
       Begin controllers.coffee
  --------------------------------------------
  */


  app.IndexCtrl = function($scope, FourstoreService, $location) {
    $scope.port = 8010;
    return $scope.open4store = function(port) {
      return $location.path("/port/" + port);
    };
  };

  app.StoreCtrl = function($scope, $routeParams, $rootScope, $timeout, FourstoreService) {
    var sparqlEditor,
      _this = this;
    sparqlEditor = null;
    $scope.port = $routeParams.port;
    $scope.defaultQuery = "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ex: <http://example.com/>\n\nSELECT *\nWHERE {\n  ?s ?p ?o\n}\nLIMIT 10";
    $timeout(function() {
      return sparqlEditor = CodeMirror.fromTextArea(angular.element('textarea')[0]);
    }, 0);
    $scope.get = function() {
      var query;
      query = sparqlEditor.getValue();
      return FourstoreService.get($scope.port, query, function(response) {
        $rootScope.prefixes = parsePrefixes(query);
        console.log($rootScope.prefixes);
        if (response.status === 200) {
          $scope.results = JSON.parse(response.body);
          return Alertify.log.success("yes");
        } else {
          return Alertify.log.error('no success');
        }
      });
    };
    return $scope.explore = function(v) {
      event.preventDefault();
      angular.element("#tabs-results li:eq(1) a").tab('show');
      FourstoreService.get($scope.port, "SELECT ?predicate ?object ?graph\nWHERE {\n  GRAPH ?graph {\n    <" + v + "> ?predicate ?object .\n  }\n}", function(res) {
        if (res.status === 200) {
          return $scope.po = JSON.parse(res.body);
        }
      });
      FourstoreService.get($scope.port, "SELECT ?subject ?object ?graph\nWHERE {\n  GRAPH ?graph {\n    ?subject <" + v + "> ?object .\n  }\n}", function(res) {
        if (res.status === 200) {
          return $scope.so = JSON.parse(res.body);
        }
      });
      return FourstoreService.get($scope.port, "SELECT ?subject ?predicate ?graph\nWHERE {\n  GRAPH ?graph {\n    ?subject ?predicate <" + v + "> .\n  }\n}", function(res) {
        if (res.status === 200) {
          return $scope.sp = JSON.parse(res.body);
        }
      });
    };
  };

  parsePrefixes = function(query) {
    var matches, prefixes;
    matches = query.match(/PREFIX (.+): <(.+)>/g);
    prefixes = {};
    matches.forEach(function(m) {
      var mm;
      mm = m.match(/(PREFIX (.+): <(.+)>)/);
      if (mm[0]) {
        return prefixes[mm[2]] = mm[3];
      }
    });
    return prefixes;
  };

}).call(this);
